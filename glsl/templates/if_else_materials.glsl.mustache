#define color_type {{colorType}}

bool get_emission(int which_obj, out color_type emission) {
  {{#materialEmissions}}
  {{^first}}else {{/first}}if (which_obj >= {{minObjectId}} && which_obj <= {{maxObjectId}}) {
    emission = {{value}};
    return true;
  }
  {{/materialEmissions}}
  return false;
}

{{#getterProperties}}
{{type}} get_{{name}}(int which_obj) {
  {{#materials}}
  {{^first}}else {{/first}}if (which_obj >= {{minObjectId}} && which_obj <= {{maxObjectId}}) {
    return {{value}};
  }
  {{/materials}}
  return {{default}};
}
{{/getterProperties}}

{{#probabilisticProperties}}
float get_{{name}}(int which_obj, out color_type color) {
  {{#materials}}
  {{^first}}else {{/first}}if (which_obj >= {{minObjectId}} && which_obj <= {{maxObjectId}}) {
    color = {{value}};
    return {{probability}};
  }
  {{/materials}}
  return 0.0;
}
{{/probabilisticProperties}}

#define get_material_id(x) x
